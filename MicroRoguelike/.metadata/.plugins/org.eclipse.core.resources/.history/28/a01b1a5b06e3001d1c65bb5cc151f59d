package application;

import javafx.event.EventHandler;
import javafx.scene.input.KeyEvent;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

public class Player extends GridEntity{

	private boolean canMove;
	
	public Player(int X, int Y, char Char) {
		super(X, Y, Char);
		// TODO Auto-generated constructor stub
		GUIManager.getInstance().getGameplayScene().setOnKeyPressed(new EventHandler<KeyEvent>(){
        	public void handle(KeyEvent event) {
        		//System.out.println(event.getCode());
        		switch(event.getCode()) {
        		case UP:
        			Move(PosX,PosY-1);
        			break;
        		case DOWN:
        			Move(PosX,PosY+1);
        			break;
        		case RIGHT:
        			Move(PosX+1,PosY);
        			break;
        		case LEFT:
        			Move(PosX-1,PosY);
        			break;
        		case W:
        			Move(PosX,PosY-1);
        			break;
        		case S:
        			Move(PosX,PosY+1);
        			break;
        		case D:
        			Move(PosX+1,PosY);
        			break;
        		case A:
        			Move(PosX-1,PosY);
        			break;
        		}
        	}
        });
		
		canMove = true;
	}
	
	public void Move(int X,int Y) {
        if(canMove) {
        	//This logic is kinda weird,
        	if(X < 8 && X > -1 && Y < 8 && Y > -1) {//Player is still in the current room
        		if(GameManager.GetInstance().GetCurrentLevel().GetCurrentRoom().getLayout()[X][Y] != 'W') {
            		SetPosition(X,Y);
            		
            		if(GameManager.GetInstance().GetCurrentLevel().GetCurrentRoom().getLayout()[X][Y] != 'E' && true) {
            			//End this level and move on the the next level
            			//Load a different scene, but for now just start a new level
            			GameManager.GetInstance().GenerateNewLevel();
            		}
            		else {
            			//disable Movement
                    	canMove = false;
                    	
                    	//Interact with entities
                    	Interact();
                    	
                    	//re-enable Movement
                    	canMove = true;
            		}
            	}
        	}
        	else {//Player is entering a new room
        		if(X > 7) {//Player is moving Right
        			GameManager.GetInstance().GetCurrentLevel().MoveToRoom(1, 0);
        			SetPosition(0,Y);
        		}
        		else if(X < 0) {//Player is moving Left
        			GameManager.GetInstance().GetCurrentLevel().MoveToRoom(-1, 0);
        			SetPosition(7,Y);
        		}
        		else if(Y < 0) {//Player is moving Up
        			GameManager.GetInstance().GetCurrentLevel().MoveToRoom(0, +1);
        			SetPosition(X,7);
        		}
        		else if(Y > 7) {//Player is moving Down
        			GameManager.GetInstance().GetCurrentLevel().MoveToRoom(0, -1);
        			SetPosition(X,0);
        		}
        		
        	}
        }
    }

	public void Interact() {
		//Game manager will pass in a list of interactables to check for
		List<Interactable> entities = GameManager.GetInstance().GetCurrentLevel().GetCurrentRoom().GetEntities();
		for (Interactable i : entities) {
			i.Interact(GetX(),GetY());
		}
	}
}
